**Question 678 Intuition (Valid Parenthesis String):**
Imagine you’re walking along a string of symbols from left to right, and you have a little counter in your mind that keeps track of how many “open” parentheses you might need. But because the “*” can be a “(”, “)”, or nothing at all, you actually keep two counters: one for the smallest number of opens you definitely need, and one for the largest number you could possibly need. Every time you see a “(”, both counters go up by one—because you certainly have one more open, and you could, in the worst case, have one more open. Every time you see a “)”, both counters go down by one—because you close something. When you see a “*”, you play it safe by assuming it could be the worst case for each counter: you decrease the “smallest needed” counter by one (as if it were a “)”) and increase the “largest needed” counter by one (as if it were a “(”). But you never let the “needed” counter drop below zero, because you can always choose to treat extra “*” as empty. If at any point your “largest possible opens” counter goes negative, it means even in the easiest interpretation you’ve closed more than you’ve opened, so the string is invalid. At the end, if your “smallest needed” counter is zero, it means there’s at least one way to interpret all the “*” so that every “(” has a matching “)”, and you return true; otherwise, you return false.

---

**Question 55 Intuition (Jump Game):**
Think of yourself standing at the first index of an array, and each number you see tells you how far you could jump forward from that spot. You don’t actually jump each time—you just keep track of the furthest place you could reach if you wanted to. Start with “maxReach” at 0. As you move from left to right through the array, at each index you check: if the index is past what you could ever reach, you’re stuck and must return false. Otherwise, see how far you could get from here (current index plus the number at that index) and update your maxReach if that’s farther than before. If at any point maxReach reaches or goes beyond the last index, you know you can make it to the end, so return true immediately. If you finish checking every index without ever reaching the end, then it’s impossible and you return false. It’s like planning your path without actually leaping—just always knowing the best possible spot you could stand next.
