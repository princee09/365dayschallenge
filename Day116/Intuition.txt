

When we want to count subarrays with exactly k odd numbers, instead of examining every possible subarray, we focus only on the positions of the odd elements. First, we collect all odd-number indices into a list and add sentinel indices (–1 and n) at its ends. For each sliding window of k consecutive odd indices, we ask: how many elements (all even) can we include before the first odd, and how many after the last odd? Multiplying these two counts gives the number of subarrays that include exactly those k odds. The “left choices” equal the distance between the first odd in the window and the previous odd (or the –1 sentinel), and the “right choices” equal the distance between the next odd (or n sentinel) and the last odd in the window. Summing the product of left and right choices over all windows yields the final answer in O(n) time—without ever checking each subarray explicitly.
