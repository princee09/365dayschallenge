856. Score of Parentheses





Imagine you are given a string made of only brackets like () or (()) or (()(())).
Now you have to calculate its total score based on simple rules.

Every simple pair () gives you 1 point.

If there is something inside the brackets like (A), then it doubles the score of A.

If two valid bracket parts are next to each other like A + B, then you just add their scores.

To calculate this score correctly, we use a stack.
Whenever we see an opening bracket (, we just mark a new section by pushing 0.
When we find a closing bracket ), we pop the last value.
If it was 0, that means it's a simple () so score is 1.
If it was a number, that means something was inside and we double it.
We add this score to the previous section.

This way, we go through the entire string once, and the top of the stack gives us the total score.









1472. Design Browser History




This is like simulating how a real browser works with back and forward buttons.

You are given a homepage. From there, you can visit more websites.
Every time you visit a new site, any forward history (future pages) is erased.
You can also go back a few steps in history or forward if possible.

We use a list to keep track of the websites you have visited.
We keep a pointer curr to remember where you currently are in that list.
We also keep last to mark how far forward you can go.

When you visit a new site, you move one step forward, and either update or add that site.

You also remove anything after that, just like how the forward button becomes disabled when you visit something new.

When you go back, you move the pointer backward but not before the first page.

When you go forward, you move ahead but not beyond the last known point.

This way, all the browser actions work smoothly just like a real browser.